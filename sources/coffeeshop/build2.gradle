plugins {
    id 'idea'
    id 'io.quarkus' version '0.23.1'
}
group 'solid.humank.coffeeshop'
version '1.0'

allprojects {
    apply plugin: 'java'
}
/*
目標訴求:
1. rootProject 是 coffeeshop, 這一層不需要 src folder.
2. 子專案的部分， *-web 是唯一會需要提供web server的部分，這會直接使用 quarkus framework來提供 rest api，而且會依賴於 *-application (ex: orders-web 依賴於 orders-application)
3. 子專案的部分， *-application都是提供服務的模組，並不是提供 web 應用，而這都會依賴於他相應的 *-domain (ex: orders-application依賴於 orders-domain)
4. 子專案的部分， *-domain是所有的業務核心， 都會需要依賴於 ddd-commons
5. 關於測試，會跑 quarkus test，具體可以試跑一下 orders-web 的單元測試
 */

subprojects {
    apply plugin: 'java'
    buildscript {
        repositories {
            mavenCentral()
            jcenter()
        }

        test {
            useJUnitPlatform()
        }
    }
    dependencies {
        testCompile group: 'io.quarkus', name: 'quarkus-junit5', version: '0.22.0'
        testCompile group: 'io.rest-assured', name: 'rest-assured', version: '3.3.0'
        testImplementation 'io.cucumber:cucumber-java8:4.7.1'
        testImplementation 'io.cucumber:cucumber-junit:4.7.1'
        compileOnly 'org.projectlombok:lombok:1.18.10'
        annotationProcessor 'org.projectlombok:lombok:1.18.10'
        testCompileOnly 'org.projectlombok:lombok:1.18.10'
        testAnnotationProcessor 'org.projectlombok:lombok:1.18.10'
        compile group: 'io.quarkus', name: 'quarkus-gradle-plugin', version: '0.23.1', ext: 'pom'
        implementation enforcedPlatform('io.quarkus:quarkus-bom:0.23.1')
        implementation 'io.quarkus:quarkus-resteasy'
        implementation platform('com.amazonaws:aws-java-sdk-bom:1.11.631')
        implementation 'com.amazonaws:aws-java-sdk-lambda'
        implementation 'com.amazonaws:aws-java-sdk-dynamodb'
        implementation 'com.amazonaws:aws-lambda-java-core'
        implementation 'com.amazonaws:aws-lambda-java-events'
        implementation 'com.amazonaws:aws-java-sdk-events'
        implementation platform('software.amazon.awssdk:bom:2.5.29')
    }
    configurations {
        cucumberRuntime {
            extendsFrom testImplementation
        }
    }
    test {
        useJUnitPlatform()
    }
    task cucumber() {
        dependsOn assemble, compileTestJava
        doLast {
            javaexec {
                main = "io.cucumber.core.cli.Main"
                classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
                args = ['--plugin', 'pretty', '--glue', 'gradle.cucumber', 'src/test/resources']
            }
        }
    }

}
project(":orders-domain") {
    dependencies {
        compile project(':ddd-commons')
    }
}
project(":orders-application") {
    dependencies {
        compile project(':orders-domain')
    }
}
project(":orders-web") {
    dependencies {
        compile project(':orders-application')
    }
}
